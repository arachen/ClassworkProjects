// Student Name: Stephanie A****g
// Submission Date: 27 April 2015
// Assignment: HW5/6 Lotto Games
// Code includes: abstract class
// Notes: REVISED VERSION -- removed generics
//		  and shuffle() as per instructions

package lasthw;

import java.util.Scanner;
import java.util.Random;

public class PlayLotto{
	// main method
	public static void main(String[] args) {
		int gameChoice;
			
		PowerBall pBall = new PowerBall();
		MegaMillion mMill = new MegaMillion();
		HotLotto hLotto = new HotLotto();
		Scanner input = new Scanner(System.in);
			
		while(true){
			System.out.print("Let's play the lottery!"
					+ "\n1. PowerBall"
					+ "\n2. MegaMillion"
					+ "\n3. HotLotto"
					+ "\nEnter the number corresponding with the game you'd like to play and press enter, or enter 0 to quit: ");
			gameChoice = input.nextInt();
			
			if(gameChoice == 1){
				pBall.powerballGen();
			}
			else if(gameChoice == 2){
				mMill.megamillGen();
			}
			else if(gameChoice == 3){
				hLotto.hotLottoGen();
			}
			else if(gameChoice == 0){
				System.out.println("Thanks for playing! Goodbye!");
				System.exit(0);
			}
			else{
				System.out.println("\nPlease enter valid input.");
			}
		}
	}
}

// base class lottoGame containing random number generator
abstract class LottoGame{
	private final int START_RANGE = 1;
	private int endRange = 99; // placeholder value, will be changed by setEnd()
	
	// generates a random integer between START_RANGE and endrange, which will 
	// be modified by individual subclasses of lottoGame
	public int numGen(){
		final int randNum;
		Random rand = new Random();

		randNum = (rand.nextInt(endRange) + START_RANGE);
		
		return randNum;
	}
 
	// method to get START_RANGE
	public int getStart(){
		return START_RANGE;
	}
	
	// method to set endRange
	public void setEnd(int num){
		endRange = num;
	}
}

class PowerBall extends LottoGame{
	public void powerballGen(){
		// min and max ranges for powerball
		final int PBALL_MIN = 1;
		final int PBALL_MAX = 35;
		final int NUMS_AND_PBALL = 5;
		final int MAX_NUM = 59;
		int winCnt = 0;
		
		// declares arrays for winning list and user list arrays of size NUMS_AND_PBALL
		int[] winList = new int[NUMS_AND_PBALL];
		int[] userList = new int[NUMS_AND_PBALL];
		
		// creates objects for list of winning numbers, the user's list of numbers,
		// and powerball number
		PowerBall winNums = new PowerBall();
		PowerBall userNums = new PowerBall();
		Random pBall = new Random();
		
		// sets endRange value for winNums and userNums objects
		winNums.setEnd(MAX_NUM);
		userNums.setEnd(MAX_NUM);
		
		// generates random number for powerball between PBALL_MIN and PBALL_MAX
		int ballNum = pBall.nextInt((PBALL_MAX - PBALL_MIN) + 1) + PBALL_MIN;
		// sets the final element of userList as the powerball
		userList[4] = ballNum;
		
		// populates array userList with random numbers generated by numGen()
		// if a random number is a duplicate of a previously generated random
		// number, generate a new random number to replace it
		System.out.println("Your numbers + powerball:");
		for(int i = 0; i < (NUMS_AND_PBALL - 1); i++){
			userList[i] = (userNums.numGen());
			if(i > 0){
				if(userList[i] == userList[i - 1]){
					userList[i] = (userNums.numGen());
				}
			}
			System.out.print(userList[i] + " ");
		}
		
		System.out.print(userList[4]);
		System.out.println("\n");
		
		// populates array winList with random numbers generated by numGen()
		// if a random number is a duplicate of a previously generated random
		// number, generate a new random number to replace it
		System.out.println("Winning numbers:");
		for(int i = 0; i < (NUMS_AND_PBALL); i++){
			winList[i] = (winNums.numGen());
			if(i > 0){
				if(winList[i] == winList[i - 1]){
					winList[i] = (winNums.numGen());
				}
			}
			System.out.print(winList[i] + " ");
		}
		
		for(int i = 0; i < NUMS_AND_PBALL; i++){
			if(userList[i] == winList[i]){
				winCnt++;
			}
		}
		
		if(winCnt < 1){
			System.out.println("\n\nSorry, you lose!");
		}
		else if(winCnt == 1){
			System.out.printf("\n\nPrize tier 1! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 2){
			System.out.printf("\n\nPrize tier 2! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 3){
			System.out.printf("\n\nPrize tier 3! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 4){
			System.out.printf("\n\nPrize tier 4! You have %d match(es)!\n", winCnt);
		}
		else if(winCnt == 5){
			System.out.println("You win the powerball grand prize! Congratulations, Shinji!");
		}
	}
}

class MegaMillion extends LottoGame{
	public void megamillGen(){
		// min and max ranges for megaball
		final int MBALL_MIN = 1;
		final int MBALL_MAX = 15;
		final int NUMS_AND_MBALL = 5;
		final int MAX_NUM = 75;
		int winCnt = 0;
		
		// declares arrays for winning list and user list arrays of size NUMS_AND_MBALL
		int[] winList = new int[NUMS_AND_MBALL];
		int[] userList = new int[NUMS_AND_MBALL];
		
		// creates objects for list of winning numbers, the user's list of numbers,
		// and megaball number
		MegaMillion winNums = new MegaMillion();
		MegaMillion userNums = new MegaMillion();
		Random mBall = new Random();
		
		// sets endRange value for winNums and userNums objects
		winNums.setEnd(MAX_NUM);
		userNums.setEnd(MAX_NUM);
		
		// generates random number for megaball between MBALL_MIN and MBALL_MAX
		int ballNum = mBall.nextInt((MBALL_MAX - MBALL_MIN) + 1) + MBALL_MIN;
		// sets the final element of userList as the megaball
		userList[4] = ballNum;
		
		// populates array userList with random numbers generated by numGen()
		// if a random number is a duplicate of a previously generated random
		// number, generate a new random number to replace it
		System.out.println("Your numbers + megaball:");
		for(int i = 0; i < (NUMS_AND_MBALL - 1); i++){
			userList[i] = (userNums.numGen());
			if(i > 0){
				if(userList[i] == userList[i - 1]){
					userList[i] = (userNums.numGen());
				}
			}
			System.out.print(userList[i] + " ");
		}
		
		System.out.print(userList[4]);
		System.out.println("\n");
		
		// populates array winList with random numbers generated by numGen()
		// if a random number is a duplicate of a previously generated random
		// number, generate a new random number to replace it
		System.out.println("Winning numbers:");
		for(int i = 0; i < (NUMS_AND_MBALL); i++){
			winList[i] = (winNums.numGen());
			if(i > 0){
				if(winList[i] == winList[i - 1]){
					winList[i] = (winNums.numGen());
				}
			}
			System.out.print(winList[i] + " ");
		}
		
		for(int i = 0; i < NUMS_AND_MBALL; i++){
			if(userList[i] == winList[i]){
				winCnt++;
			}
		}
		
		if(winCnt < 1){
			System.out.println("\n\nSorry, you lose!");
		}
		else if(winCnt == 1){
			System.out.printf("\n\nPrize tier 1! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 2){
			System.out.printf("\n\nPrize tier 2! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 3){
			System.out.printf("\n\nPrize tier 3! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 4){
			System.out.printf("\n\nPrize tier 4! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 5){
			System.out.println("You win the powerball grand prize! Congratulations, Shinji!");
		}
	}
}

class HotLotto extends LottoGame{
	public void hotLottoGen(){
		// min and max ranges for hotball
		final int HBALL_MIN = 1;
		final int HBALL_MAX = 19;
		final int NUMS_AND_HBALL = 5;
		final int MAX_NUM = 47;
		int winCnt = 0;
		
		// declares arrays for winning list and user list arrays of size NUMS_AND_MBALL
		int[] winList = new int[NUMS_AND_HBALL];
		int[] userList = new int[NUMS_AND_HBALL];
		
		// creates objects for list of winning numbers, the user's list of numbers,
		// and hotball number
		HotLotto winNums = new HotLotto();
		HotLotto userNums = new HotLotto();
		Random mBall = new Random();
		
		// sets endRange value for winNums and userNums objects
		winNums.setEnd(MAX_NUM);
		userNums.setEnd(MAX_NUM);
		
		// generates random number for hotball between MBALL_MIN and MBALL_MAX
		int ballNum = mBall.nextInt((HBALL_MAX - HBALL_MIN) + 1) + HBALL_MIN;
		// sets the final element of userList as the hotball
		userList[4] = ballNum;
		
		// populates array userList with random numbers generated by numGen()
		// if a random number is a duplicate of a previously generated random
		// number, generate a new random number to replace it
		System.out.println("Your numbers + hotball:");
		for(int i = 0; i < (NUMS_AND_HBALL - 1); i++){
			userList[i] = (userNums.numGen());
			if(i > 0){
				if(userList[i] == userList[i - 1]){
					userList[i] = (userNums.numGen());
				}
			}
			System.out.print(userList[i] + " ");
		}
		
		System.out.print(userList[4]);
		System.out.println("\n");
		
		// populates array winList with random numbers generated by numGen()
		// if a random number is a duplicate of a previously generated random
		// number, generate a new random number to replace it
		System.out.println("Winning numbers:");
		for(int i = 0; i < (NUMS_AND_HBALL); i++){
			winList[i] = (winNums.numGen());
			if(i > 0){
				if(winList[i] == winList[i - 1]){
					winList[i] = (winNums.numGen());
				}
			}
			System.out.print(winList[i] + " ");
		}
		
		for(int i = 0; i < NUMS_AND_HBALL; i++){
			if(userList[i] == winList[i]){
				winCnt++;
			}
		}
		
		if(winCnt < 1){
			System.out.println("\n\nSorry, you lose!");
		}
		else if(winCnt == 1){
			System.out.printf("\n\nPrize tier 1! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 2){
			System.out.printf("\n\nPrize tier 2! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 3){
			System.out.printf("\n\nPrize tier 3! You have %d mmatch(es)\n", winCnt);
		}
		else if(winCnt == 4){
			System.out.printf("\n\nPrize tier 4! You have %d match(es)\n", winCnt);
		}
		else if(winCnt == 5){
			System.out.println("You win the powerball grand prize! Congratulations, Shinji!");
		}
	}
}
